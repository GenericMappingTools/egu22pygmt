Traceback (most recent call last):
  File "/usr/share/miniconda3/envs/egu22pygmt/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/usr/share/miniconda3/envs/egu22pygmt/lib/python3.9/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/share/miniconda3/envs/egu22pygmt/lib/python3.9/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/usr/share/miniconda3/envs/egu22pygmt/lib/python3.9/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/usr/share/miniconda3/envs/egu22pygmt/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/usr/share/miniconda3/envs/egu22pygmt/lib/python3.9/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/usr/share/miniconda3/envs/egu22pygmt/lib/python3.9/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/usr/share/miniconda3/envs/egu22pygmt/lib/python3.9/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Create an instance of the pygmt.Figure class
fig = pygmt.Figure()
# Create a colormap for the figure
pygmt.makecpt(cmap="bilbao", series=cmap_bounds)
# Create a basemap
fig.basemap(region="d", projection="H15c", frame=True)
# Plot the GeoDataFrame
# - Use `close=True` to specify that the polygons should be forced closed
# - Plot the polygon outlines with a 1 point, black pen
# - Set that the color should be based on the `pop_est` using the `color, `cmap`, and `aspatial` parameters
fig.plot(data=world, pen="1p,black", close=True, color="+z", cmap=True, aspatial="Z=pop_est")
# Add a colorbar
fig.colorbar(position="JMR", frame='a200+lPopulation (millions)')
# Display the output
fig.show()

------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mAttributeError[0m                            Traceback (most recent call last)
File [0;32m/usr/share/miniconda3/envs/egu22pygmt/lib/python3.9/site-packages/pygmt/helpers/tempfile.py:134[0m, in [0;36mtempfile_from_geojson[0;34m(geojson)[0m
[1;32m    132[0m [38;5;28;01mtry[39;00m:
[1;32m    133[0m     [38;5;66;03m# Using geopandas.to_file to directly export to OGR_GMT format[39;00m
[0;32m--> 134[0m     [43mgeojson[49m[38;5;241;43m.[39;49m[43mto_file[49m[43m([49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mogrgmt_kwargs[49m[43m)[49m
[1;32m    135[0m [38;5;28;01mexcept[39;00m [38;5;167;01mAttributeError[39;00m:
[1;32m    136[0m     [38;5;66;03m# pylint: disable=import-outside-toplevel[39;00m
[1;32m    137[0m     [38;5;66;03m# Other 'geo' formats which implement __geo_interface__[39;00m

File [0;32m/usr/share/miniconda3/envs/egu22pygmt/lib/python3.9/site-packages/geopandas/geodataframe.py:1114[0m, in [0;36mGeoDataFrame.to_file[0;34m(self, filename, driver, schema, index, **kwargs)[0m
[1;32m   1112[0m [38;5;28;01mfrom[39;00m [38;5;21;01mgeopandas[39;00m[38;5;21;01m.[39;00m[38;5;21;01mio[39;00m[38;5;21;01m.[39;00m[38;5;21;01mfile[39;00m [38;5;28;01mimport[39;00m _to_file
[0;32m-> 1114[0m [43m_to_file[49m[43m([49m[38;5;28;43mself[39;49m[43m,[49m[43m [49m[43mfilename[49m[43m,[49m[43m [49m[43mdriver[49m[43m,[49m[43m [49m[43mschema[49m[43m,[49m[43m [49m[43mindex[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [0;32m/usr/share/miniconda3/envs/egu22pygmt/lib/python3.9/site-packages/geopandas/io/file.py:362[0m, in [0;36m_to_file[0;34m(df, filename, driver, schema, index, mode, crs, **kwargs)[0m
[1;32m    358[0m [38;5;28;01mif[39;00m index [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[1;32m    359[0m     [38;5;66;03m# Determine if index attribute(s) should be saved to file[39;00m
[1;32m    360[0m     index [38;5;241m=[39m [38;5;28mlist[39m(df[38;5;241m.[39mindex[38;5;241m.[39mnames) [38;5;241m!=[39m [[38;5;28;01mNone[39;00m] [38;5;129;01mor[39;00m [38;5;28mtype[39m(df[38;5;241m.[39mindex) [38;5;129;01mnot[39;00m [38;5;129;01min[39;00m (
[1;32m    361[0m         pd[38;5;241m.[39mRangeIndex,
[0;32m--> 362[0m         [43mpd[49m[38;5;241;43m.[39;49m[43mInt64Index[49m,
[1;32m    363[0m     )
[1;32m    364[0m [38;5;28;01mif[39;00m index:

[0;31mAttributeError[0m: module 'pandas' has no attribute 'Int64Index'

During handling of the above exception, another exception occurred:

[0;31mAttributeError[0m                            Traceback (most recent call last)
Cell [0;32mIn[4], line 11[0m
[1;32m      6[0m fig[38;5;241m.[39mbasemap(region[38;5;241m=[39m[38;5;124m"[39m[38;5;124md[39m[38;5;124m"[39m, projection[38;5;241m=[39m[38;5;124m"[39m[38;5;124mH15c[39m[38;5;124m"[39m, frame[38;5;241m=[39m[38;5;28;01mTrue[39;00m)
[1;32m      7[0m [38;5;66;03m# Plot the GeoDataFrame[39;00m
[1;32m      8[0m [38;5;66;03m# - Use `close=True` to specify that the polygons should be forced closed[39;00m
[1;32m      9[0m [38;5;66;03m# - Plot the polygon outlines with a 1 point, black pen[39;00m
[1;32m     10[0m [38;5;66;03m# - Set that the color should be based on the `pop_est` using the `color, `cmap`, and `aspatial` parameters[39;00m
[0;32m---> 11[0m [43mfig[49m[38;5;241;43m.[39;49m[43mplot[49m[43m([49m[43mdata[49m[38;5;241;43m=[39;49m[43mworld[49m[43m,[49m[43m [49m[43mpen[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43m1p,black[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[43mclose[49m[38;5;241;43m=[39;49m[38;5;28;43;01mTrue[39;49;00m[43m,[49m[43m [49m[43mcolor[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43m+z[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[43mcmap[49m[38;5;241;43m=[39;49m[38;5;28;43;01mTrue[39;49;00m[43m,[49m[43m [49m[43maspatial[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43mZ=pop_est[39;49m[38;5;124;43m"[39;49m[43m)[49m
[1;32m     12[0m [38;5;66;03m# Add a colorbar[39;00m
[1;32m     13[0m fig[38;5;241m.[39mcolorbar(position[38;5;241m=[39m[38;5;124m"[39m[38;5;124mJMR[39m[38;5;124m"[39m, frame[38;5;241m=[39m[38;5;124m'[39m[38;5;124ma200+lPopulation (millions)[39m[38;5;124m'[39m)

File [0;32m/usr/share/miniconda3/envs/egu22pygmt/lib/python3.9/site-packages/pygmt/helpers/decorators.py:872[0m, in [0;36mcheck_data_input_order.<locals>.data_input_order_checker.<locals>.new_module[0;34m(*args, **kwargs)[0m
[1;32m    864[0m     msg [38;5;241m=[39m (
[1;32m    865[0m         [38;5;124m"[39m[38;5;124mThe function parameters has been re-ordered as [39m[38;5;124m'[39m[38;5;124mdata, x, y, [z][39m[38;5;124m'[39m[38;5;124m [39m[38;5;124m"[39m
[1;32m    866[0m         [38;5;124mf[39m[38;5;124m"[39m[38;5;124msince [39m[38;5;132;01m{[39;00mdeprecate_version[38;5;132;01m}[39;00m[38;5;124m but you[39m[38;5;124m'[39m[38;5;124mre passing positional arguments. [39m[38;5;124m"[39m
[0;32m   (...)[0m
[1;32m    869[0m         [38;5;124mf[39m[38;5;124m"[39m[38;5;124min [39m[38;5;132;01m{[39;00mremove_version[38;5;132;01m}[39;00m[38;5;124m.[39m[38;5;124m"[39m
[1;32m    870[0m     )
[1;32m    871[0m     warnings[38;5;241m.[39mwarn(msg, category[38;5;241m=[39m[38;5;167;01mFutureWarning[39;00m, stacklevel[38;5;241m=[39m[38;5;241m2[39m)
[0;32m--> 872[0m [38;5;28;01mreturn[39;00m [43mmodule_func[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [0;32m/usr/share/miniconda3/envs/egu22pygmt/lib/python3.9/site-packages/pygmt/helpers/decorators.py:585[0m, in [0;36muse_alias.<locals>.alias_decorator.<locals>.new_module[0;34m(*args, **kwargs)[0m
[1;32m    580[0m         msg [38;5;241m=[39m (
[1;32m    581[0m             [38;5;124mf[39m[38;5;124m"[39m[38;5;124mShort-form parameter ([39m[38;5;132;01m{[39;00mshort_param[38;5;132;01m}[39;00m[38;5;124m) is not recommended. [39m[38;5;124m"[39m
[1;32m    582[0m             [38;5;124mf[39m[38;5;124m"[39m[38;5;124mUse long-form parameter [39m[38;5;124m'[39m[38;5;132;01m{[39;00mlong_alias[38;5;132;01m}[39;00m[38;5;124m'[39m[38;5;124m instead.[39m[38;5;124m"[39m
[1;32m    583[0m         )
[1;32m    584[0m         warnings[38;5;241m.[39mwarn(msg, category[38;5;241m=[39m[38;5;167;01mSyntaxWarning[39;00m, stacklevel[38;5;241m=[39m[38;5;241m2[39m)
[0;32m--> 585[0m [38;5;28;01mreturn[39;00m [43mmodule_func[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [0;32m/usr/share/miniconda3/envs/egu22pygmt/lib/python3.9/site-packages/pygmt/helpers/decorators.py:725[0m, in [0;36mkwargs_to_strings.<locals>.converter.<locals>.new_module[0;34m(*args, **kwargs)[0m
[1;32m    723[0m             kwargs[arg] [38;5;241m=[39m separators[fmt][38;5;241m.[39mjoin([38;5;124mf[39m[38;5;124m"[39m[38;5;132;01m{[39;00mitem[38;5;132;01m}[39;00m[38;5;124m"[39m [38;5;28;01mfor[39;00m item [38;5;129;01min[39;00m value)
[1;32m    724[0m [38;5;66;03m# Execute the original function and return its output[39;00m
[0;32m--> 725[0m [38;5;28;01mreturn[39;00m [43mmodule_func[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [0;32m/usr/share/miniconda3/envs/egu22pygmt/lib/python3.9/site-packages/pygmt/src/plot.py:268[0m, in [0;36mplot[0;34m(self, data, x, y, size, direction, **kwargs)[0m
[1;32m    262[0m [38;5;28;01mwith[39;00m Session() [38;5;28;01mas[39;00m lib:
[1;32m    263[0m     [38;5;66;03m# Choose how data will be passed in to the module[39;00m
[1;32m    264[0m     file_context [38;5;241m=[39m lib[38;5;241m.[39mvirtualfile_from_data(
[1;32m    265[0m         check_kind[38;5;241m=[39m[38;5;124m"[39m[38;5;124mvector[39m[38;5;124m"[39m, data[38;5;241m=[39mdata, x[38;5;241m=[39mx, y[38;5;241m=[39my, extra_arrays[38;5;241m=[39mextra_arrays
[1;32m    266[0m     )
[0;32m--> 268[0m     [38;5;28;01mwith[39;00m file_context [38;5;28;01mas[39;00m fname:
[1;32m    269[0m         lib[38;5;241m.[39mcall_module([38;5;124m"[39m[38;5;124mplot[39m[38;5;124m"[39m, build_arg_string(kwargs, infile[38;5;241m=[39mfname))

File [0;32m/usr/share/miniconda3/envs/egu22pygmt/lib/python3.9/contextlib.py:119[0m, in [0;36m_GeneratorContextManager.__enter__[0;34m(self)[0m
[1;32m    117[0m [38;5;28;01mdel[39;00m [38;5;28mself[39m[38;5;241m.[39margs, [38;5;28mself[39m[38;5;241m.[39mkwds, [38;5;28mself[39m[38;5;241m.[39mfunc
[1;32m    118[0m [38;5;28;01mtry[39;00m:
[0;32m--> 119[0m     [38;5;28;01mreturn[39;00m [38;5;28;43mnext[39;49m[43m([49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mgen[49m[43m)[49m
[1;32m    120[0m [38;5;28;01mexcept[39;00m [38;5;167;01mStopIteration[39;00m:
[1;32m    121[0m     [38;5;28;01mraise[39;00m [38;5;167;01mRuntimeError[39;00m([38;5;124m"[39m[38;5;124mgenerator didn[39m[38;5;124m'[39m[38;5;124mt yield[39m[38;5;124m"[39m) [38;5;28;01mfrom[39;00m [38;5;28;01mNone[39;00m

File [0;32m/usr/share/miniconda3/envs/egu22pygmt/lib/python3.9/site-packages/pygmt/helpers/tempfile.py:148[0m, in [0;36mtempfile_from_geojson[0;34m(geojson)[0m
[1;32m    146[0m         [38;5;28;01mwith[39;00m fiona[38;5;241m.[39mio[38;5;241m.[39mMemoryFile(file_or_bytes[38;5;241m=[39mjsontext[38;5;241m.[39mencode()) [38;5;28;01mas[39;00m memfile:
[1;32m    147[0m             geoseries [38;5;241m=[39m gpd[38;5;241m.[39mGeoSeries[38;5;241m.[39mfrom_file(filename[38;5;241m=[39mmemfile)
[0;32m--> 148[0m             [43mgeoseries[49m[38;5;241;43m.[39;49m[43mto_file[49m[43m([49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mogrgmt_kwargs[49m[43m)[49m
[1;32m    150[0m [38;5;28;01myield[39;00m tmpfile[38;5;241m.[39mname

File [0;32m/usr/share/miniconda3/envs/egu22pygmt/lib/python3.9/site-packages/geopandas/geoseries.py:583[0m, in [0;36mGeoSeries.to_file[0;34m(self, filename, driver, index, **kwargs)[0m
[1;32m    581[0m data [38;5;241m=[39m GeoDataFrame({[38;5;124m"[39m[38;5;124mgeometry[39m[38;5;124m"[39m: [38;5;28mself[39m}, index[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39mindex)
[1;32m    582[0m data[38;5;241m.[39mcrs [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mcrs
[0;32m--> 583[0m [43mdata[49m[38;5;241;43m.[39;49m[43mto_file[49m[43m([49m[43mfilename[49m[43m,[49m[43m [49m[43mdriver[49m[43m,[49m[43m [49m[43mindex[49m[38;5;241;43m=[39;49m[43mindex[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [0;32m/usr/share/miniconda3/envs/egu22pygmt/lib/python3.9/site-packages/geopandas/geodataframe.py:1114[0m, in [0;36mGeoDataFrame.to_file[0;34m(self, filename, driver, schema, index, **kwargs)[0m
[1;32m   1053[0m [38;5;250m[39m[38;5;124;03m"""Write the ``GeoDataFrame`` to a file.[39;00m
[1;32m   1054[0m 
[1;32m   1055[0m [38;5;124;03mBy default, an ESRI shapefile is written, but any OGR data source[39;00m
[0;32m   (...)[0m
[1;32m   1110[0m [38;5;124;03m>>> gdf.to_file('dataframe.shp', mode="a")  # doctest: +SKIP[39;00m
[1;32m   1111[0m [38;5;124;03m"""[39;00m
[1;32m   1112[0m [38;5;28;01mfrom[39;00m [38;5;21;01mgeopandas[39;00m[38;5;21;01m.[39;00m[38;5;21;01mio[39;00m[38;5;21;01m.[39;00m[38;5;21;01mfile[39;00m [38;5;28;01mimport[39;00m _to_file
[0;32m-> 1114[0m [43m_to_file[49m[43m([49m[38;5;28;43mself[39;49m[43m,[49m[43m [49m[43mfilename[49m[43m,[49m[43m [49m[43mdriver[49m[43m,[49m[43m [49m[43mschema[49m[43m,[49m[43m [49m[43mindex[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [0;32m/usr/share/miniconda3/envs/egu22pygmt/lib/python3.9/site-packages/geopandas/io/file.py:362[0m, in [0;36m_to_file[0;34m(df, filename, driver, schema, index, mode, crs, **kwargs)[0m
[1;32m    356[0m filename [38;5;241m=[39m _expand_user(filename)
[1;32m    358[0m [38;5;28;01mif[39;00m index [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[1;32m    359[0m     [38;5;66;03m# Determine if index attribute(s) should be saved to file[39;00m
[1;32m    360[0m     index [38;5;241m=[39m [38;5;28mlist[39m(df[38;5;241m.[39mindex[38;5;241m.[39mnames) [38;5;241m!=[39m [[38;5;28;01mNone[39;00m] [38;5;129;01mor[39;00m [38;5;28mtype[39m(df[38;5;241m.[39mindex) [38;5;129;01mnot[39;00m [38;5;129;01min[39;00m (
[1;32m    361[0m         pd[38;5;241m.[39mRangeIndex,
[0;32m--> 362[0m         [43mpd[49m[38;5;241;43m.[39;49m[43mInt64Index[49m,
[1;32m    363[0m     )
[1;32m    364[0m [38;5;28;01mif[39;00m index:
[1;32m    365[0m     df [38;5;241m=[39m df[38;5;241m.[39mreset_index(drop[38;5;241m=[39m[38;5;28;01mFalse[39;00m)

[0;31mAttributeError[0m: module 'pandas' has no attribute 'Int64Index'
AttributeError: module 'pandas' has no attribute 'Int64Index'

